<patch-1.0 appVersion="1.0.12">
   <patchobj type="patch/object" uuid="8987539f-fb0a-4bc3-bf8a-bbd8478fe3ec" name="button_pot_1" x="126" y="14">
      <params/>
      <attribs/>
      <object id="patch/object" uuid="8987539f-fb0a-4bc3-bf8a-bbd8478fe3ec">
         <sDescription></sDescription>
         <author>Paul</author>
         <license>BSD</license>
         <inlets/>
         <outlets/>
         <displays/>
         <params/>
         <attribs/>
         <includes/>
         <code.declaration><![CDATA[Thread* Thd;

extern int8_t globalBlobCC[16][256];
extern int8_t globalNotes[16];

int32_t pots[8] ={0,0,0,0, 0,0,0,0};
int32_t midiHeight = 0;
uint8_t midiBytes[3];
uint8_t midiCurData;
uint8_t midiNumData;

uint8_t StatusToMsgLength(uint8_t t)
{
    switch (t)
    {
        case 0x0:
        case 0x1:
        case 0x2:
        case 0x3:
        case 0x4:
        case 0x5:
        case 0x6:
        case 0x7: return 0;
        case 0x8:
        case 0x9:
        case 0xa:
        case 0xb: return 3;
        case 0xc:
        case 0xd: return 2;
        case 0xe: return 3;
        default: return -1;
    }
}

void MidiInByteHandler(uint8_t data)
{
    int8_t len;
    if (data & 0x80)
    {
        len = StatusToMsgLength(data >> 4);
        midiBytes[0] = data;
        midiNumData  = len - 1;
        midiCurData  = 0;
    }
    else
    {
        if (midiCurData == 0)
        {
            midiBytes[1] = data;
            midiCurData++;
        }
        else if (midiCurData == 1)
        {
            midiBytes[2] = data;
            if (midiNumData == 2)
            {
                if ((midiBytes[0]>>4) == 0xB)
                {
               	globalBlob[midiBytes[0]&0x0f][midiBytes[1]] = midiBytes[2];
                    LogTextMessage("%02x, %02x, %02x", midiBytes[0], midiBytes[1], midiBytes[2]);
                }
                else if ((midiBytes[0]>>4) == 0x9)
                {
                	globalNotes[midiBytes[0] & 0x0f] = midiBytes[1];
                    LogTextMessage("%02x, %02x, %02x", midiBytes[0], midiBytes[1], midiBytes[2]);
                }
                midiCurData = 0;
            }
        }
    }
}

msg_t ThreadX2()
{
#if CH_USE_REGISTRY
is this used?
    chRegSetThreadName("euxo button pot"); // define thread name
#endif

    midiNumData = 0;
    midiCurData = 0;

    sdPut(&SD2, 0xFF);

    while (!chThdShouldTerminate())
    {
        while (!sdGetWouldBlock(&SD2))
        {
            uint8_t ch = sdGet(&SD2);
            LogTextMessage("v=%02x", (int) ch);
            MidiInByteHandler(ch);
        }
        chThdSleepMilliseconds(1);
    }
    chThdExit((msg_t) 0);
}

static msg_t EuxoButPot(void* arg)
{
    ((attr_parent*) arg)->ThreadX2();
}
WORKING_AREA(waEuxoButPot, 256);]]></code.declaration>
         <code.init><![CDATA[palSetPadMode(GPIOA, 3, PAL_MODE_ALTERNATE(7)|PAL_MODE_INPUT);// RX
palSetPadMode(GPIOA, 2, PAL_MODE_ALTERNATE(7));// TX

static const SerialConfig sd2Cfg = {115200, 0, 0, 0}; // set to midi baud rate but works also with higher baud rates.
sdStart(&SD2, &sd2Cfg);

Thd = chThdCreateStatic(waEuxoButPot, sizeof(waEuxoButPot),NORMALPRIO, EuxoButPot, (void *)this);]]></code.init>
         <code.dispose><![CDATA[chThdTerminate(Thd);
chThdWait(Thd);
sdStop(&SD2);]]></code.dispose>
         <code.krate><![CDATA[outlet_pot1 = this->pot[0];
outlet_pot2 = this->pot[1];
outlet_pot3 = this->pot[2];
outlet_pot4 = this->pot[3];
outlet_pot5 = this->pot[4];
outlet_pot6 = this->pot[5];


outlet_height = this->height;
disp_d1 = attr_channel;]]></code.krate>
      </object>
   </patchobj>
   <obj type="audio/in stereo" uuid="99848ad6d90a8e615e83b2e619cfc806f28e7281" name="in_1" x="14" y="112">
      <params/>
      <attribs/>
   </obj>
   <obj type="audio/out stereo" uuid="a1ca7a567f535acc21055669829101d3ee7f0189" name="out_1" x="126" y="112">
      <params/>
      <attribs/>
   </obj>
   <nets>
      <net>
         <source obj="in_1" outlet="left"/>
         <dest obj="out_1" inlet="left"/>
      </net>
      <net>
         <source obj="in_1" outlet="right"/>
         <dest obj="out_1" inlet="right"/>
      </net>
   </nets>
   <settings>
      <subpatchmode>no</subpatchmode>
   </settings>
   <notes><![CDATA[]]></notes>
   <windowPos>
      <x>851</x>
      <y>237</y>
      <width>400</width>
      <height>400</height>
   </windowPos>
</patch-1.0>